FROM alpine as copy
ARG PM_VERSION
WORKDIR /tmp
RUN wget https://github.com/ProcessMaker/processmaker/archive/refs/tags/v${PM_VERSION}.zip
RUN unzip v${PM_VERSION}.zip && mkdir -p /code/pm4 && mv processmaker-${PM_VERSION} /code/pm4

FROM composer:1.7 as vendor
ARG PM_VERSION
WORKDIR /code/pm4
COPY --from=copy /code/pm4/processmaker-${PM_VERSION} .
RUN composer install --ignore-platform-reqs
COPY build-files/laravel-echo-server.json .

FROM node:lts-alpine as node
WORKDIR /code/pm4
COPY --from=vendor /code/pm4 .
RUN npm install
RUN npm run dev

FROM serversideup/php:7.4-fpm-nginx
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ="America/Los_Angeles"
ENV DOCKERVERSION=20.10.5
RUN apt-get update
RUN apt-get install -y --no-install-recommends supervisor cron php-json php-common php-mysql php-zip php-gd php-mbstring php-curl php-xml php-pear php-bcmath php-imagick php-sqlite3 mysql-client \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*
RUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz \
    && tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 \
    -C /usr/local/bin docker/docker \
    && rm docker-${DOCKERVERSION}.tgz
RUN sed -i 's/www-data/root/g' /etc/php/7.4/fpm/pool.d/www.conf
COPY build-files/services.conf /etc/supervisor/conf.d/services.conf
COPY build-files/nginx.conf /etc/nginx/nginx.conf
COPY build-files/laravel-cron /etc/cron.d/laravel-cron
RUN chmod 0644 /etc/cron.d/laravel-cron && crontab /etc/cron.d/laravel-cron
WORKDIR /code/pm4
COPY --from=node /code/pm4 .
COPY build-files/init.sh .
EXPOSE 80 443 6001
CMD bash init.sh && supervisord --nodaemon
